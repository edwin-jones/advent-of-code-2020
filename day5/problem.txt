Can an input file, splitting input by lines.

Data is in this format: FBFBBFFRLR

There are 128 possible values for F and B and 8 for L and R.

Use binary space partitioning to divide by 2 and choose the lower of upper segment of the result in series
to come to a result. For instance, the above string resolves to:

0-127 (start at 0)
F 0-63
B 32-63
F 32-47
B 40-47
B 44-47
F 44-45
F 44

0-7 (start at 0)
R 4-7
L 4-5
R 5


Take this result and multiply x * 8 + 5, where x is the final FB value and Y is the final LR value.
so that would be 44 * 8 + 5 = 357

Find the highest result for all lines with this pattern.

THEN

Find the missing value in the _middle_ of the set rather than summing.
The surrounding values will be n+1 and n-1